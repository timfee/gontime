// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 77;
	objects = {

/* Begin PBXBuildFile section */
		E8B76FD52D692DC200EF16DB /* Defaults in Frameworks */ = {isa = PBXBuildFile; productRef = E8B76FD42D692DC200EF16DB /* Defaults */; };
		E8B76FD72D692DC200EF16DB /* DefaultsMacros in Frameworks */ = {isa = PBXBuildFile; productRef = E8B76FD62D692DC200EF16DB /* DefaultsMacros */; };
		E8B76FDC2D6940AF00EF16DB /* LaunchAtLogin in Frameworks */ = {isa = PBXBuildFile; productRef = E8B76FDB2D6940AF00EF16DB /* LaunchAtLogin */; };
		E8B76FEB2D6A3D9100EF16DB /* MenuBarExtraAccess in Frameworks */ = {isa = PBXBuildFile; productRef = E8B76FEA2D6A3D9100EF16DB /* MenuBarExtraAccess */; };
		E8F399752D67B1DB00EA45B1 /* GoogleSignIn in Frameworks */ = {isa = PBXBuildFile; productRef = E8F399742D67B1DB00EA45B1 /* GoogleSignIn */; };
		E8F399772D67B1DB00EA45B1 /* GoogleSignInSwift in Frameworks */ = {isa = PBXBuildFile; productRef = E8F399762D67B1DB00EA45B1 /* GoogleSignInSwift */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		E8F3995D2D67B01900EA45B1 /* gontime.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = gontime.app; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFileSystemSynchronizedBuildFileExceptionSet section */
		E8F399872D67C8AB00EA45B1 /* Exceptions for "gontime" folder in "gontime" target */ = {
			isa = PBXFileSystemSynchronizedBuildFileExceptionSet;
			membershipExceptions = (
				Info.plist,
			);
			target = E8F3995C2D67B01900EA45B1 /* gontime */;
		};
/* End PBXFileSystemSynchronizedBuildFileExceptionSet section */

/* Begin PBXFileSystemSynchronizedRootGroup section */
		E8F3995F2D67B01900EA45B1 /* gontime */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			exceptions = (
				E8F399872D67C8AB00EA45B1 /* Exceptions for "gontime" folder in "gontime" target */,
			);
			path = gontime;
			sourceTree = "<group>";
		};
/* End PBXFileSystemSynchronizedRootGroup section */

/* Begin PBXFrameworksBuildPhase section */
		E8F3995A2D67B01900EA45B1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E8B76FD52D692DC200EF16DB /* Defaults in Frameworks */,
				E8B76FD72D692DC200EF16DB /* DefaultsMacros in Frameworks */,
				E8F399752D67B1DB00EA45B1 /* GoogleSignIn in Frameworks */,
				E8B76FDC2D6940AF00EF16DB /* LaunchAtLogin in Frameworks */,
				E8B76FEB2D6A3D9100EF16DB /* MenuBarExtraAccess in Frameworks */,
				E8F399772D67B1DB00EA45B1 /* GoogleSignInSwift in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		E8F399542D67B01900EA45B1 = {
			isa = PBXGroup;
			children = (
				E8F3995F2D67B01900EA45B1 /* gontime */,
				E8F3995E2D67B01900EA45B1 /* Products */,
			);
			sourceTree = "<group>";
		};
		E8F3995E2D67B01900EA45B1 /* Products */ = {
			isa = PBXGroup;
			children = (
				E8F3995D2D67B01900EA45B1 /* gontime.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		E8F3995C2D67B01900EA45B1 /* gontime */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E8F3996C2D67B01900EA45B1 /* Build configuration list for PBXNativeTarget "gontime" */;
			buildPhases = (
				E8EFE09C2D838A1F00830926 /* ShellScript */,
				E8F399592D67B01900EA45B1 /* Sources */,
				E8F3995A2D67B01900EA45B1 /* Frameworks */,
				E8F3995B2D67B01900EA45B1 /* Resources */,
				E8DBC8B42D8236C7001781A7 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			fileSystemSynchronizedGroups = (
				E8F3995F2D67B01900EA45B1 /* gontime */,
			);
			name = gontime;
			packageProductDependencies = (
				E8F399742D67B1DB00EA45B1 /* GoogleSignIn */,
				E8F399762D67B1DB00EA45B1 /* GoogleSignInSwift */,
				E8B76FD42D692DC200EF16DB /* Defaults */,
				E8B76FD62D692DC200EF16DB /* DefaultsMacros */,
				E8B76FDB2D6940AF00EF16DB /* LaunchAtLogin */,
				E8B76FEA2D6A3D9100EF16DB /* MenuBarExtraAccess */,
			);
			productName = gontime;
			productReference = E8F3995D2D67B01900EA45B1 /* gontime.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		E8F399552D67B01900EA45B1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1620;
				LastUpgradeCheck = 1620;
				ORGANIZATIONNAME = Google;
				TargetAttributes = {
					E8F3995C2D67B01900EA45B1 = {
						CreatedOnToolsVersion = 16.2;
					};
				};
			};
			buildConfigurationList = E8F399582D67B01900EA45B1 /* Build configuration list for PBXProject "gontime" */;
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = E8F399542D67B01900EA45B1;
			minimizedProjectReferenceProxies = 1;
			packageReferences = (
				E8F399732D67B1DB00EA45B1 /* XCRemoteSwiftPackageReference "GoogleSignIn-iOS" */,
				E8B76FD32D692DC200EF16DB /* XCRemoteSwiftPackageReference "Defaults" */,
				E8B76FDA2D6940AF00EF16DB /* XCRemoteSwiftPackageReference "LaunchAtLogin-Modern" */,
				E8B76FE92D6A3D9100EF16DB /* XCRemoteSwiftPackageReference "MenuBarExtraAccess" */,
			);
			preferredProjectObjectVersion = 77;
			productRefGroup = E8F3995E2D67B01900EA45B1 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				E8F3995C2D67B01900EA45B1 /* gontime */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		E8F3995B2D67B01900EA45B1 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		E8DBC8B42D8236C7001781A7 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/bin/bash\n\nPYTHON=$(which python3 || which python)\nif [ -z \"$PYTHON\" ]; then\n    echo \"Python not found. Please install Python to continue.\"\n    exit 1\nfi\n\n\"$PYTHON\" - \"$SRCROOT\" \"$PROJECT_NAME\" \"$USER\" <<'EOF'\nimport os\nimport sys\nimport subprocess\nimport re\nimport datetime\n\nsrc_root = sys.argv[1]\nproject_name = sys.argv[2]\nuser = sys.argv[3]\ncurrent_year = datetime.datetime.now().year\n\n\ndef process_swift_file(file_path, author_email):\n    with open(file_path, 'r') as f:\n        lines = f.readlines()\n\n    lines = remove_leading_comments(lines)\n    lines = add_header(lines, file_path, project_name, author_email)\n    lines = remove_trailing_comments(lines)\n    lines = handle_mark_spacing(lines)\n    lines = handle_doc_comments(lines)\n    lines = handle_regular_comments(lines)\n    lines = handle_function_struct_class_spacing(lines)\n    lines = handle_brace_spacing(lines)\n\n    with open(file_path, 'w') as f:\n        f.writelines(lines)\n\n    subprocess.run(['swift-format', '-i', file_path])\n\n    print(f\"Processed: {os.path.relpath(file_path, src_root)}\")\n\n\ndef extract_author(lines, default_email):\n    author_pattern = re.compile(r'^//\\s*Author:\\s*(.+)$')\n    for line in lines[:10]:  # Check first 10 lines for author\n        match = author_pattern.match(line)\n        if match:\n            return match.group(1).strip()\n    return default_email\n\n\ndef remove_leading_comments(lines):\n    i = 0\n    while i < len(lines) and (lines[i].strip().startswith('//') or lines[i].strip() == ''):\n        i += 1\n    return lines[i:]\n\n\ndef add_header(lines, file_path, project_name, author_email):\n    filename = os.path.basename(file_path)\n    current_year = datetime.datetime.now().year\n    header = [\n        '//\\n',\n        f'//  {filename}\\n',\n        f'//  {project_name}\\n',\n        '//\\n',\n        f'//  Copyright {current_year} Google LLC\\n',\n        '//\\n',\n        f'//  Author: {author_email}\\n',\n        '//\\n\\n',\n    ]\n    return header + lines\n\n\ndef remove_trailing_comments(lines):\n    while lines and (lines[-1].strip().startswith('//') or lines[-1].strip() == ''):\n        lines.pop()\n    return lines\n\n\ndef handle_mark_spacing(lines):\n    output = []\n    for i, line in enumerate(lines):\n        if line.strip().startswith(\"// MARK: -\"):\n            if output and (not output[-1].strip() == \"\"):\n                output.append(\"\\n\")\n            output.append(line)\n            output.append(\"\\n\")\n        else:\n            output.append(line)\n    return output\n\n\ndef handle_doc_comments(lines):\n    output = []\n    i = 0\n    while i < len(lines):\n        if lines[i].strip().startswith(\"///\"):\n            if output and output[-1].strip() != \"\":\n                output.append(\"\\n\")\n            while i < len(lines) and lines[i].strip().startswith(\"///\"):\n                output.append(lines[i])\n                i += 1\n            # Skip blank lines immediately after a doc comment\n            while i < len(lines) and lines[i].strip() == \"\":\n                i += 1\n            # Avoid inserting blank line before definitions\n            if i < len(lines) and not re.match(r'^\\s*(func|struct|class)\\s', lines[i]):\n                output.append(\"\\n\")\n        else:\n            output.append(lines[i])\n            i += 1\n    return output\n\n\n\ndef handle_regular_comments(lines):\n    output = []\n    for i, line in enumerate(lines):\n        if line.strip().startswith(\"//\") and not line.strip().startswith(\"// MARK:\"):\n            if output and output[-1].strip() != \"\" and not output[-1].strip().startswith(\"//\"):\n                output.append(\"\\n\")\n            output.append(line)\n        else:\n            output.append(line)\n    return output\n\n\ndef handle_function_struct_class_spacing(lines):\n    output = []\n    for line in lines:\n        if re.match(r'^\\s*(func|struct|class)\\s', line):\n            if output and output[-1].strip() != \"\" and not output[-1].strip().startswith(\"///\"):\n                output.append(\"\\n\")\n        output.append(line)\n    return output\n\n\ndef handle_brace_spacing(lines):\n    output = []\n    for line in lines:\n        if line.strip() == \"{\" and output:\n            if output[-1].strip() == \"\":\n                output.pop()\n            output.append(\" {\\n\")\n        else:\n            output.append(line)\n    return output\n\n\nif __name__ == \"__main__\":\n    default_email = f\"{user}@google.com\"\n    swift_files_found = False\n    exclude_dirs = {'.git', '.xcproj'}\n\n    for root, dirs, files in os.walk(src_root):\n        dirs[:] = [d for d in dirs if d not in exclude_dirs]\n        for filename in files:\n            if filename.endswith(\".swift\"):\n                swift_files_found = True\n                file_path = os.path.join(root, filename)\n                with open(file_path, 'r') as f:\n                    original_lines = f.readlines()\n                author_email = extract_author(original_lines, default_email)\n                process_swift_file(file_path, author_email)\n\n    if swift_files_found:\n        print(\"Finished processing all Swift files.\")\n        sys.exit(0)  # success\n    else:\n        print(\"No Swift files found to process.\")\n        sys.exit(1)  # warning/error condition\nEOF\n";
		};
		E8EFE09C2D838A1F00830926 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Type a script or drag a script file from your workspace to insert its path.\ndefaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		E8F399592D67B01900EA45B1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		E8F3996A2D67B01900EA45B1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEAD_CODE_STRIPPING = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_KEY_LSUIElement = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MACOSX_DEPLOYMENT_TARGET = 15.2;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		E8F3996B2D67B01900EA45B1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEAD_CODE_STRIPPING = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_KEY_LSUIElement = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MACOSX_DEPLOYMENT_TARGET = 15.2;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
			};
			name = Release;
		};
		E8F3996D2D67B01900EA45B1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS = YES;
				CODE_SIGN_ENTITLEMENTS = gontime/gontime.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 4;
				DEAD_CODE_STRIPPING = YES;
				DEVELOPMENT_TEAM = Q46ZBWXXXL;
				ENABLE_HARDENED_RUNTIME = YES;
				ENABLE_PREVIEWS = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = NO;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = gontime/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = gOnTime;
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.productivity";
				INFOPLIST_KEY_LSUIElement = YES;
				INFOPLIST_KEY_NSHumanReadableCopyright = "Copyright 2025 Google (author: timfee@)";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 15.0;
				MARKETING_VERSION = 1.1;
				PRODUCT_BUNDLE_IDENTIFIER = dev.timfee.gontime;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		E8F3996E2D67B01900EA45B1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS = YES;
				CODE_SIGN_ENTITLEMENTS = gontime/gontime.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 4;
				DEAD_CODE_STRIPPING = YES;
				DEVELOPMENT_TEAM = Q46ZBWXXXL;
				ENABLE_HARDENED_RUNTIME = YES;
				ENABLE_PREVIEWS = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = NO;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = gontime/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = gOnTime;
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.productivity";
				INFOPLIST_KEY_LSUIElement = YES;
				INFOPLIST_KEY_NSHumanReadableCopyright = "Copyright 2025 Google (author: timfee@)";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				MACOSX_DEPLOYMENT_TARGET = 15.0;
				MARKETING_VERSION = 1.1;
				PRODUCT_BUNDLE_IDENTIFIER = dev.timfee.gontime;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		E8F399582D67B01900EA45B1 /* Build configuration list for PBXProject "gontime" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E8F3996A2D67B01900EA45B1 /* Debug */,
				E8F3996B2D67B01900EA45B1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E8F3996C2D67B01900EA45B1 /* Build configuration list for PBXNativeTarget "gontime" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E8F3996D2D67B01900EA45B1 /* Debug */,
				E8F3996E2D67B01900EA45B1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCRemoteSwiftPackageReference section */
		E8B76FD32D692DC200EF16DB /* XCRemoteSwiftPackageReference "Defaults" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/sindresorhus/Defaults";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 9.0.1;
			};
		};
		E8B76FDA2D6940AF00EF16DB /* XCRemoteSwiftPackageReference "LaunchAtLogin-Modern" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/sindresorhus/LaunchAtLogin-Modern";
			requirement = {
				branch = main;
				kind = branch;
			};
		};
		E8B76FE92D6A3D9100EF16DB /* XCRemoteSwiftPackageReference "MenuBarExtraAccess" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/orchetect/MenuBarExtraAccess.git";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 1.2.1;
			};
		};
		E8F399732D67B1DB00EA45B1 /* XCRemoteSwiftPackageReference "GoogleSignIn-iOS" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/google/GoogleSignIn-iOS";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 8.0.0;
			};
		};
/* End XCRemoteSwiftPackageReference section */

/* Begin XCSwiftPackageProductDependency section */
		E8B76FD42D692DC200EF16DB /* Defaults */ = {
			isa = XCSwiftPackageProductDependency;
			package = E8B76FD32D692DC200EF16DB /* XCRemoteSwiftPackageReference "Defaults" */;
			productName = Defaults;
		};
		E8B76FD62D692DC200EF16DB /* DefaultsMacros */ = {
			isa = XCSwiftPackageProductDependency;
			package = E8B76FD32D692DC200EF16DB /* XCRemoteSwiftPackageReference "Defaults" */;
			productName = DefaultsMacros;
		};
		E8B76FDB2D6940AF00EF16DB /* LaunchAtLogin */ = {
			isa = XCSwiftPackageProductDependency;
			package = E8B76FDA2D6940AF00EF16DB /* XCRemoteSwiftPackageReference "LaunchAtLogin-Modern" */;
			productName = LaunchAtLogin;
		};
		E8B76FEA2D6A3D9100EF16DB /* MenuBarExtraAccess */ = {
			isa = XCSwiftPackageProductDependency;
			package = E8B76FE92D6A3D9100EF16DB /* XCRemoteSwiftPackageReference "MenuBarExtraAccess" */;
			productName = MenuBarExtraAccess;
		};
		E8F399742D67B1DB00EA45B1 /* GoogleSignIn */ = {
			isa = XCSwiftPackageProductDependency;
			package = E8F399732D67B1DB00EA45B1 /* XCRemoteSwiftPackageReference "GoogleSignIn-iOS" */;
			productName = GoogleSignIn;
		};
		E8F399762D67B1DB00EA45B1 /* GoogleSignInSwift */ = {
			isa = XCSwiftPackageProductDependency;
			package = E8F399732D67B1DB00EA45B1 /* XCRemoteSwiftPackageReference "GoogleSignIn-iOS" */;
			productName = GoogleSignInSwift;
		};
/* End XCSwiftPackageProductDependency section */
	};
	rootObject = E8F399552D67B01900EA45B1 /* Project object */;
}
